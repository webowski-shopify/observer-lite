!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=t():"function"==typeof define&&define.amd?define([],t):e.ObserverLite=t()}("undefined"!=typeof globalThis?globalThis:this,(function(){const e=Symbol.for("ObserverLiteRegistry");return class{constructor(t={}){this.id=Math.floor(999999999999*Math.random()),this.settings=t;const s=globalThis[e]??= {};if(t.key){if(s[t.key])return s[t.key];s[t.key]=this}}once(){return new Promise(e=>{if(this.onceDone)return e(this.onceDone);const t=this.subscribe(s=>{s=s||!0,this.onceDone=s,e(s),this.unsubscribe(t)})})}setOnce(e){this.onceDone=e||!0}next(...e){this.onceDone||this.setOnce(...e),this.subject?.length&&[...this.subject].forEach(({callback:t})=>{t(...e)})}subscribe(e){this.subject=this.subject||[];const t={callback:e,id:Math.floor(100000000000000+9e14*Math.random())};return this.subject.push(t),t}unsubscribe(e){if(!e||"number"!=typeof e.id)return console.warn("Invalid subscription passed to unsubscribe()"),void 0;const t=this.subject?.some(({id:t})=>t===e.id);t?(this.subject=this.subject.filter(({id:t})=>t!==e.id)):console.warn("Subscription not found. Cannot unsubscribe.")}unsubscribeAll(e){this.subject?.forEach(e=>this.unsubscribe(e)),e&&(this.onceDone=!1)}}}));
